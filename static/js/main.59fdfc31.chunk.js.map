{"version":3,"sources":["assets/music/mixdown_1.mp3","App.js","reportWebVitals.js","index.js"],"names":["App","audio","Audio","music","className","id","options","fpsLimit","background","color","value","position","repeat","size","fullScreen","zIndex","particles","move","enable","outModes","bottom","left","right","top","direction","angle","number","density","rotate","random","animation","speed","opacity","anim","opacity_min","sync","shape","char","fill","font","weight","type","onClick","playPromise","play","undefined","then","_","console","log","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAAe,G,YAAA,IAA0B,uC,yBCmG1BA,MA9Ff,WACE,IAAIC,EAAQ,IAAIC,MAAMC,GAatB,OACE,sBAAKC,UAAU,gBAAf,UACE,cAAC,IAAD,CACEC,GAAG,cACHC,QAAS,CACPC,SAAU,IACVC,WAAY,CACVC,MAAO,CACLC,MAAO,WAETC,SAAU,UACVC,OAAQ,YACRC,KAAM,SAERC,WAAY,CACVC,QAAS,GAEXC,UAAW,CACTC,KAAM,CACJC,QAAQ,EACRC,SAAU,CACRC,OAAQ,MACRC,KAAM,MACNC,MAAO,MACPC,IAAK,OAEPC,UAAW,SACXC,MAAO,IAETC,OAAQ,CACNC,QAAS,CACPT,QAAQ,GAEVR,MAAO,IAETkB,OAAQ,CACNC,OAAQ,CACNX,QAAQ,GAEVY,UAAW,CACTZ,QAAQ,EACRa,MAAO,GAETP,UAAW,UAEbf,MAAO,CACLC,MAAO,WAETsB,QAAS,CACPC,KAAM,CAAEf,QAAQ,EAAMgB,YAAa,GAAKH,MAAO,GAAKI,MAAM,GAC1DN,QAAQ,EACRnB,MAAO,IAET0B,MAAO,CACL9B,QAAS,CACP+B,KAAM,CACJC,MAAM,EACNC,KAAM,sBACN7B,MAAO,CACL,SACA,SACA,UAEF8B,OAAQ,QAGZC,KAAM,QAER5B,KAAM,CACJH,MAAO,QAKf,oBAAIgC,QAtFW,WACjB,IAAMC,EAAc1C,EAAM2C,YACNC,IAAhBF,GACFA,EACGG,MAAK,SAAAC,GACJC,QAAQC,IAAI,wBAEbC,OAAM,SAAAC,GACLH,QAAQC,IAAI,0BA8EhB,SAAyB,uBAAM5C,GAAG,OAAT,UAAgB,sBAAMA,GAAG,UAAT,kBAA8B,sBAAMA,GAAG,YAAT,eAA6B,sBAAMA,GAAG,YAAT,uBACpG,oDClFS+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.59fdfc31.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mixdown_1.81910fad.mp3\";","import './App.css';\r\nimport music from './assets/music/mixdown_1.mp3'\r\n// import './musicScript'\r\nimport Particles from \"react-tsparticles\";\r\n\r\nfunction App() {\r\n  let audio = new Audio(music);\r\n  const startMusic = () => {\r\n    const playPromise = audio.play();\r\n    if (playPromise !== undefined) {\r\n      playPromise\r\n        .then(_ => {\r\n          console.log(\"audio played auto\");\r\n        })\r\n        .catch(error => {\r\n          console.log(\"playback prevented\");\r\n        });\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <Particles\r\n        id=\"tsparticles\"\r\n        options={{\r\n          fpsLimit: 120,\r\n          background: {\r\n            color: {\r\n              value: \"#403d3c\",\r\n            },\r\n            position: \"50% 50%\",\r\n            repeat: \"no-repeat\",\r\n            size: \"cover\",\r\n          },\r\n          fullScreen: {\r\n            zIndex: -1,\r\n          },\r\n          particles: {\r\n            move: {\r\n              enable: true,\r\n              outModes: {\r\n                bottom: \"out\",\r\n                left: \"out\",\r\n                right: \"out\",\r\n                top: \"out\",\r\n              },\r\n              direction: \"bottom\",\r\n              angle: 20,\r\n            },\r\n            number: {\r\n              density: {\r\n                enable: true,\r\n              },\r\n              value: 15,\r\n            },\r\n            rotate: {\r\n              random: {\r\n                enable: true,\r\n              },\r\n              animation: {\r\n                enable: true,\r\n                speed: 1,\r\n              },\r\n              direction: \"random\",\r\n            },\r\n            color: {\r\n              value: \"#ffffff\",\r\n            },\r\n            opacity: {\r\n              anim: { enable: true, opacity_min: 0.1, speed: 0.1, sync: true },\r\n              random: false,\r\n              value: 0.5,\r\n            },\r\n            shape: {\r\n              options: {\r\n                char: {\r\n                  fill: true,\r\n                  font: \"Font Awesome 5 Free\",\r\n                  value: [\r\n                    \"\\uf1fe\", //chart-area\r\n                    \"\\uf080\", //chart-bar\r\n                    \"\\uf201\", //chart-line-up\r\n                  ],\r\n                  weight: \"900\",\r\n                },\r\n              },\r\n              type: \"char\",\r\n            },\r\n            size: {\r\n              value: 32,\r\n            },\r\n          },\r\n        }}\r\n      />\r\n      <h1 onClick={startMusic}><span id=\"Logo\"><span id=\"logoRed\">sick</span><span id=\"logoWhite\">.</span><span id=\"logoGreen\">cash</span></span></h1>\r\n      <h2>Coming Soon...</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}